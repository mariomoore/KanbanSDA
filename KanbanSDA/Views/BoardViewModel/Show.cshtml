@model KanbanSDA.ViewModels.BoardViewModel

@{
    ViewBag.Title = "Show";
}

<h2>Board: 
@Html.DisplayFor(m => m.BoardsList.FirstOrDefault().Project.Name)</h2>

<p>
    @Html.ActionLink("Add Column", "Create", "Column", new { boardId = Model.BoardsList.FirstOrDefault().Id}, null) |
    @Html.ActionLink("Add Issue", "Create", "IssueViewModel", new { projectId = Model.BoardsList.FirstOrDefault().ProjectId }, null)
</p>

<div>
    <hr />
    <ul class="board-columns">
        @foreach (var col in Model.ColumnsList)
        {
            <li class="board-column text-center">
                <strong>@Html.DisplayFor(modelItem => col.Name)</strong>
            </li>
        }
    </ul>

    <ul class="board-columns">
        @foreach (var col in Model.ColumnsList)
        {
            <li class="board-column board-column-wBorder">
                <ul class="sortable-column">
                    @foreach (var iss in Model.IssuesList)
                    {
                           if (iss.ColumnId == col.Id)
                            {
                                <li>
                                    <div class="panel panel-default" style="margin-bottom:2px; margin-top:2px;">
                                        <div class="panel-heading">
                                            <h4>
                                                @Html.DisplayFor(modelItem => iss.Name)
                                            </h4>
                                        </div>
                                        <div class="panel panel-body" style="margin-bottom:0px">
                                            <p>
                                                @Html.DisplayFor(modelItem => iss.Description)
                                            </p>
                                        </div>
                                        <div class="panel panel-footer" style="margin-bottom:0px">
                                            @Html.ActionLink("Edit", "Edit", "IssueViewModel", new { id = iss.Id }, null) |
                                            @Html.ActionLink("Details", "Details", "IssueViewModel", new { id = iss.Id }, null) |
                                            @Html.ActionLink("Delete", "Delete", "IssueViewModel", new { id = iss.Id }, null) |
                                            @Html.ActionLink("Send to Backlog", "SendToBacklog", new { issueId = iss.Id }) |
                                            @Html.ActionLink(HttpUtility.HtmlDecode("&#9757;"), "SendUp", new { issueId = iss.Id })
                                            @Html.ActionLink(HttpUtility.HtmlDecode("&#9759;"), "SendDown", new { issueId = iss.Id })
                                        </div>
                                    </div>
                                </li>
                            }    
                    }
                </ul>
            </li>
        }
    </ul>

    <ul class="board-columns">
        @foreach (var col in Model.ColumnsList)
        {
            <li class="board-column text-center">
                @Html.ActionLink("Edit Column", "Edit", "Column", new { id = col.Id }, null) |
                @Html.ActionLink("Delete Column", "Delete", "Column", new { id = col.Id }, null)
            </li>
        }
    </ul>

    <h2>Backlog</h2>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(m => m.IssuesList[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.IssuesList[0].Description)
            </th>
            <th>
                Actions
            </th>
        </tr>

        @foreach (var item in Model.IssuesList)
        {
            if (item.ColumnId == null)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "IssueViewModel", new { id = item.Id }, null) |
                        @Html.ActionLink("Details", "Details", "IssueViewModel", new { id = item.Id }, null) |
                        @Html.ActionLink("Delete", "Delete", "IssueViewModel", new { id = item.Id }, null)
                    </td>
                </tr>
            }
        }
    </table>
</div>
